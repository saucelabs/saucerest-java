name: Java CI

on:
  push:
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_dispatch:
  schedule:
    - cron: '0 */8 * * *'

permissions:
  contents: write

env:
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}

jobs:
  pre_job:
    continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with: # All of these options are optional, so you can remove them if you are happy with the defaults
          concurrent_skipping: 'always'
          skip_after_successful_duplicate: 'true'
          paths_ignore: '["**/README.md", "**/docs/**"]'
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
      - name: Not from fork?
        run: |
          echo "$NOT_FROM_FORK"

  main_job:
    needs: pre_job
    name: Unit Tests
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: mvn clean test -Dtest="com.saucelabs.saucerest.unit.**" -Dgpg.skip -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -V
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./target/site/jacoco/jacoco.xml
          flags: unittests

  Upload_apps:
    name: Upload My Demo Apps
    needs: main_job
    uses: ./.github/workflows/upload_my_demo_app.yml
    secrets: inherit

  #  Setup_Sauce_Connect:
  #    name: Setup Sauce Connect tunnels
  #    needs: main_job
  #    uses: ./.github/workflows/setup-sauce-connect-tunnels.yml
  #    secrets: inherit

  Integration:
    needs: [ main_job, Upload_apps ]
    name: Integration Tests
    runs-on: ubuntu-latest
    # Only run integration tests if the code is coming from this repo and not forks

    steps:
      - name: Set env var for Integration Tests
        if: ${{  github.repository == github.event.pull_request.head.repo.full_name }} || ${{ github.event.push.head.repo.full_name == github.repository }}
        run: |
          echo "NOT_FROM_FORK=true" >> $GITHUB_ENV

      - name: Print env var
        run: |
          echo "NOT_FROM_FORK: ${{ env.NOT_FROM_FORK }}"

      - uses: actions/checkout@v3
        if: ${{ env.NOT_FROM_FORK }} == 'true'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        if: ${{ env.NOT_FROM_FORK }} == 'true'
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup Sauce Connect US-West
        uses: saucelabs/sauce-connect-action@v2
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelName: github-action-tunnel-us-west
          configFile: ${{ github.workspace }}/src/test/resources/sauce-connect-config-us-west.yaml

      - name: Setup Sauce Connect EU-Central
        uses: saucelabs/sauce-connect-action@v2
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelName: github-action-tunnel-eu-central
          configFile: ${{ github.workspace }}/src/test/resources/sauce-connect-config-eu-central.yaml

      - name: Setup Sauce Connect APAC-Southeast
        uses: saucelabs/sauce-connect-action@v2
        with:
          username: ${{ secrets.SAUCE_USERNAME }}
          accessKey: ${{ secrets.SAUCE_ACCESS_KEY }}
          tunnelName: github-action-tunnel-apac-southeast
          configFile: ${{ github.workspace }}/src/test/resources/sauce-connect-config-apac-southeast.yaml

      - name: Build with Maven
        id: runIntegrationTests
        if: ${{ env.NOT_FROM_FORK }} == 'true'
        run: mvn clean test -Dtest="com.saucelabs.saucerest.integration.**" -Dgpg.skip -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -V

#  slackNotification:
#    name: Slack Notification
#    if: |
#      always() && (steps.runIntegrationTests.outcome == 'failure') &&
#      (${{  github.repository == github.event.pull_request.head.repo.full_name }} || ${{ github.event.push.head.repo.full_name == github.repository }})
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}